<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。
    首先说明下proxy-target-class="true"和proxy-target-class="false"的区别，为true则是基于类的代理将起作用（需要cglib库），
    为false或者省略这个属性，则标准的JDK 基于接口的代理将起作用。proxy-target-class在spring事务、aop、缓存这几块都有设置，其作用都是一样的。
    参考：https://blog.csdn.net/shaoweijava/article/details/76474652 -->
    <aop:config proxy-target-class="true"></aop:config>

    <!-- MVC支持注解的配置 -->
    <mvc:annotation-driven/>

    <!-- 当user-default-filters=true时（默认为true）,
    会扫描base-package包及其子包带有@Component、@Repository、@Service和@Controller的类,
    当user-default-fitlers为false时,就可以指定扫描某种类型的类，
    context:include-filter就是包含某个类型，
    context:include-filter就是排队基个类型
    参考：https://blog.csdn.net/chunqiuwei/article/details/16115135
    -->
    <context:component-scan base-package="lrcshiro08" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 参考：springMVC实现首页的重定向 https://blog.csdn.net/honghailiang888/article/details/52488980 -->
    <mvc:view-controller path="/" view-name="index"/>

</beans>